by_unit = group_by(cleaned_data, unit)
unique_unit = summarise(by_department, count = n())
View(unique_unit)
#count Unique departments
by_unit = group_by(cleaned_data, unit)
unique_unit = summarise(by_unit, count = n())
#create a bar plot
ggplot(unique_dpt, aes(unit, count, fill = unit))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
#create a bar plot
ggplot(unique_unit, aes(unit, count, fill = unit))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
colnames(cleaned_data)
#rename several coloumns
cleaned_data = rename(cleaned_data,position = X3..What.is.your.current.position)
by_position = group_by(cleaned_data, unit)
unique_position = summarise(by_unit, count = n())
View(unique_position)
unique_position = summarise(by_position, count = n())
#count Unique positions
by_position = group_by(cleaned_data, unit)
unique_position = summarise(by_position, count = n())
#create a bar plot
ggplot(unique_position, aes(position, count, fill = position))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
unique_position = summarise(by_position, count = n())
#create a bar plot
ggplot(unique_position, aes(position, count, fill = position))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
#count Unique positions
by_position = group_by(cleaned_data, position)
unique_position = summarise(by_position, count = n())
#create a bar plot
ggplot(unique_position, aes(position, count, fill = position))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
#count Unique departments
by_department = group_by(cleaned_data, department)
unique_dpt = summarise(by_department, count = n())
#create a bar plot
ggplot(unique_dpt, aes(department, count, fill = department))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
#create a bar plot
ggplot(unique_position, aes(position, count, fill = position))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
colnames(unique_position)
ggplot(unique_position, aes(position, count))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold")
)
#How long have you been in your current position
#Develop a box plot
bxplt_data_1 <- data.frame(group = "current", value = cleaned_data$time_current)
bxplt_data_2 <- data.frame(group = "industry", value = cleaned_data$time_industry)
bxplt_data <- rbind(bxplt_data_1,bxplt_data_2)
#load libraries
library(ggplot2)
library(dplyr)
#Read data into R
data_1 <- read.csv("~/work/Survey_1.csv", header = TRUE)
#get all row with yes.
cleaned_data <- filter(data_1, Do.you.wish.to.participate.in.this.assessment. == "Yes")
View(cleaned_data)
#rename several coloumns
cleaned_data = rename(cleaned_data,position = X3..What.is.your.current.position)
cleaned_data = rename(cleaned_data,conset = Do.you.wish.to.participate.in.this.assessment.)
cleaned_data = rename(cleaned_data,department = X1..Which.Department.do.you.belong.to.)
cleaned_data = rename(cleaned_data,unit = X2..Which.Unit.do.you.belong.to.)
cleaned_data = select(cleaned_data, -If.you.belong.to.another.department...Kindly.specify.here.)
cleaned_data = select(cleaned_data, -If.you.belong.to.another.Unit...Kindly.specify.here.)
cleaned_data = rename(cleaned_data,time_current = X4..How.long.have.you.been.in.your.current.position..In.months.)
cleaned_data = rename(cleaned_data,time_industry = X5..Experience.in.your.current.area.of.work..In.months.)
#count Unique departments
by_department = group_by(cleaned_data, department)
unique_dpt = summarise(by_department, count = n())
#create a bar plot
ggplot(unique_dpt, aes(department, count, fill = department))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
#count Unique unit
by_unit = group_by(cleaned_data, unit)
unique_unit = summarise(by_unit, count = n())
#create a bar plot
ggplot(unique_unit, aes(unit, count, fill = unit))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
#Analysis of unique positions reported back in the survey.
cleaned_data$position <- tolower(cleaned_data$position)
by_position = group_by(cleaned_data, position)
unique_position = summarise(by_position, count = n())
#table actual positions reported
#How long have you been in your current position
#Develop a box plot
bxplt_data_1 <- data.frame(group = "current", value = cleaned_data$time_current)
bxplt_data_2 <- data.frame(group = "industry", value = cleaned_data$time_industry)
bxplt_data <- rbind(bxplt_data_1,bxplt_data_2)
#develop a box plot for distribution of experience
ggplot(data = bxplt_data, aes(group, value, fill = group))+
geom_boxplot(outlier.colour="red", outlier.shape=8,outlier.size=4)+
stat_summary(geom="text", fun.y=quantile)
ggplot(data = bxplt_data, aes(group, value, fill = group))+
geom_boxplot(outlier.colour="red", outlier.shape=8,outlier.size=4)
cleaned_data = rename(cleaned_data,level_education = X6..Highest.level.of.education..Specify.level.of.training.and.actual.area.of.training.)
#Analysis of unique qualifications  reported back in the survey.
cleaned_data$level_education <- tolower(cleaned_data$level_education)
by_edlevel = group_by(cleaned_data, level_education)
unique_edlevel = summarise(by_edlevel, count = n())
View(unique_edlevel)
View(unique_edlevel)
View(unique_position)
View(unique_position)
length(unique_position[1,1])
unique_position[1,1]
as.vector(unique_position[1,1])
as.vector(unique_position[1,1])
unique_position[1,2]
nchar(unique_position[1,2])
nchar(unique_position[1,1])
nchar(unique_position[1,2])
nchar(unique_position[2,1])
length(unique_position[2,1])
#Read data into R
data_1 <- read.csv("~/work/Survey_1.csv", header = TRUE, strip.white=TRUE)
#get all row with yes.
cleaned_data <- filter(data_1, Do.you.wish.to.participate.in.this.assessment. == "Yes")
View(cleaned_data)
#rename several coloumns
cleaned_data = rename(cleaned_data,position = X3..What.is.your.current.position)
cleaned_data = rename(cleaned_data,conset = Do.you.wish.to.participate.in.this.assessment.)
cleaned_data = rename(cleaned_data,department = X1..Which.Department.do.you.belong.to.)
cleaned_data = rename(cleaned_data,unit = X2..Which.Unit.do.you.belong.to.)
cleaned_data = select(cleaned_data, -If.you.belong.to.another.department...Kindly.specify.here.)
cleaned_data = select(cleaned_data, -If.you.belong.to.another.Unit...Kindly.specify.here.)
#experience variables
cleaned_data = rename(cleaned_data,time_current = X4..How.long.have.you.been.in.your.current.position..In.months.)
cleaned_data = rename(cleaned_data,time_industry = X5..Experience.in.your.current.area.of.work..In.months.)
#level of education
cleaned_data = rename(cleaned_data,level_education = X6..Highest.level.of.education..Specify.level.of.training.and.actual.area.of.training.)
#count Unique departments
by_department = group_by(cleaned_data, department)
unique_dpt = summarise(by_department, count = n())
#Analysis of unique positions reported back in the survey.
cleaned_data$position <- tolower(cleaned_data$position)
by_position = group_by(cleaned_data, position)
unique_position = summarise(by_position, count = n())
View(unique_position)
View(unique_position)
#Analysis of unique positions reported back in the survey.
cleaned_data$position <- tolower(cleaned_data$position)
# returns string w/o trailing whitespace
trim.trailing <- function (x) sub("\\s+$", "", x)
cleaned_data$position <-trim.trailing(cleaned_data$position)
by_position = group_by(cleaned_data, position)
unique_position = summarise(by_position, count = n())
#Analysis of unique qualifications  reported back in the survey.
cleaned_data$level_education <- tolower(cleaned_data$level_education)
cleaned_data$level_education <-trim.trailing(cleaned_data$level_education)
by_edlevel = group_by(cleaned_data, level_education)
unique_edlevel = summarise(by_edlevel, count = n())
cleaned_data = rename(cleaned_data,training = X7..Have.you.done.any.training.in.your.current.area.of.work.)
training <- cleaned_data[,c('training', 'unit')]
View(training)
grouped_training = group_by(training_data, training)
#Analysis on training required per unit
training_data <- cleaned_data[,c('training', 'unit')]
grouped_training = group_by(training_data, training)
#load libraries
library(ggplot2)
library(dplyr)
#Read data into R
data_1 <- read.csv("~/work/Survey_1.csv", header = TRUE, strip.white=TRUE)
#get all row with yes.
cleaned_data <- filter(data_1, Do.you.wish.to.participate.in.this.assessment. == "Yes")
View(cleaned_data)
#rename several coloumns
cleaned_data = rename(cleaned_data,position = X3..What.is.your.current.position)
cleaned_data = rename(cleaned_data,conset = Do.you.wish.to.participate.in.this.assessment.)
cleaned_data = rename(cleaned_data,department = X1..Which.Department.do.you.belong.to.)
cleaned_data = rename(cleaned_data,unit = X2..Which.Unit.do.you.belong.to.)
cleaned_data = select(cleaned_data, -If.you.belong.to.another.department...Kindly.specify.here.)
cleaned_data = select(cleaned_data, -If.you.belong.to.another.Unit...Kindly.specify.here.)
#experience variables
cleaned_data = rename(cleaned_data,time_current = X4..How.long.have.you.been.in.your.current.position..In.months.)
cleaned_data = rename(cleaned_data,time_industry = X5..Experience.in.your.current.area.of.work..In.months.)
#level of education
cleaned_data = rename(cleaned_data,level_education = X6..Highest.level.of.education..Specify.level.of.training.and.actual.area.of.training.)
#training data
cleaned_data = rename(cleaned_data,training = X7..Have.you.done.any.training.in.your.current.area.of.work.)
#count Unique departments
by_department = group_by(cleaned_data, department)
unique_dpt = summarise(by_department, count = n())
#create a bar plot
ggplot(unique_dpt, aes(department, count, fill = department))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
#count Unique unit
by_unit = group_by(cleaned_data, unit)
unique_unit = summarise(by_unit, count = n())
#create a bar plot
ggplot(unique_unit, aes(unit, count, fill = unit))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
#Analysis of unique positions reported back in the survey.
cleaned_data$position <- tolower(cleaned_data$position)
# returns string w/o trailing whitespace
trim.trailing <- function (x) sub("\\s+$", "", x)
cleaned_data$position <-trim.trailing(cleaned_data$position)
by_position = group_by(cleaned_data, position)
unique_position = summarise(by_position, count = n())
#table actual positions reported
#How long have you been in your current position
#Develop a box plot
bxplt_data_1 <- data.frame(group = "current", value = cleaned_data$time_current)
bxplt_data_2 <- data.frame(group = "industry", value = cleaned_data$time_industry)
bxplt_data <- rbind(bxplt_data_1,bxplt_data_2)
#develop a box plot for distribution of experience
ggplot(data = bxplt_data, aes(group, value, fill = group))+
geom_boxplot(outlier.colour="red", outlier.shape=8,outlier.size=4)
#Analysis of unique qualifications  reported back in the survey.
cleaned_data$level_education <- tolower(cleaned_data$level_education)
cleaned_data$level_education <-trim.trailing(cleaned_data$level_education)
by_edlevel = group_by(cleaned_data, level_education)
unique_edlevel = summarise(by_edlevel, count = n())
#Analysis on training required per unit
training_data <- cleaned_data[,c('training', 'unit')]
grouped_training = group_by(training_data, training)
#unit per training
View(training_data)
View(training_data)
unit_training <- summarise(
n = n_distinct(unit)
)
unit_training <- summarise(grouped_training, n = n_distinct(unit))
View(unit_training)
View(unit_training)
unit_training <- summarise(grouped_training, n = ())
unit_training <- summarise(grouped_training, count = n())
unit_training <- summarise(grouped_training, n = n_distinct(training))
grouped_training = group_by(training_data, unit)
unit_training <- summarise(grouped_training, n = n_distinct(training))
unit_training <- summarise(grouped_training, count = n())
unit_training <- summarise(count_yes = sum(trainining == 'Yes'))
unit_training <- summarise(count_yes = sum(training == 'Yes'))
unit_training <- summarise(grouped_training, count_yes = sum(training == 'Yes'))
unit_training <- summarise(grouped_training, count_yes = sum(training == 'Yes'), count_no = sum(training == 'No'))
unit_training <- summarise(grouped_training, Yes = sum(training == 'Yes'), No = sum(training == 'No'))
View(unique_dpt)
View(unique_dpt)
help("reshape")
help(melt)
??melt
unit_training <- melt(unit_training)
library(reshape2)
library(reshape2)
unit_training <- melt(unit_training)
unit_training <- summarise(grouped_training, Yes = sum(training == 'Yes'), No = sum(training == 'No'))
unit_training <- summarise(grouped_training, Yes = sum(training == 'Yes'), No = sum(training == 'No'))
remove(unit_training)
unit_training <- summarise(grouped_training, Yes = sum(training == 'Yes'), No = sum(training == 'No'))
training_data <- cleaned_data[,c('training', 'unit')]
grouped_training = group_by(training_data, unit)
unit_training <- summarise(grouped_training, Yes = sum(training == 'Yes'), No = sum(training == 'No'))
View(unit_training)
View(unit_training)
shp_training <- melt(unit_training)
View(shp_training)
View(shp_training)
ggplot(shp_training, aes(unit, value, fill = variable))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
ggplot(shp_training, aes(unit, value, fill = variable))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
fix(unit_training)
fix(unit_training)
shp_training <- melt(unit_training)
ggplot(shp_training, aes(unit, value, fill = variable))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value), fontface = "bold")+
theme(
axis.text.x = element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.x = element_text(colour = "#FE6F88", size = 12, face = "bold"),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
ggplot(shp_training, aes(unit, value, fill = variable))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value), fontface = "bold", vjust = 0.5)+
theme(
axis.text.x = element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.x = element_text(colour = "#FE6F88", size = 12, face = "bold"),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
ggplot(shp_training, aes(unit, value, fill = variable))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value), fontface = "bold", position = position_dodge(width = 1), vjust = 0.5)+
theme(
axis.text.x = element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.x = element_text(colour = "#FE6F88", size = 12, face = "bold"),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
test_data <- filter(shp_training, value > 0)
View(test_data)
View(test_data)
ggplot(shp_training, aes(unit, value, fill = variable))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value), fontface = "bold", position = position_dodge(width = 1), vjust = 0.5)+
theme(
axis.text.x = element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.x = element_text(colour = "#FE6F88", size = 12, face = "bold"),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
ggplot(shp_training, aes(unit, value, fill = variable))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value), fontface = "bold", position = position_dodge(width = 1), vjust = 0.5)+
theme(
axis.text.x = element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.x = element_text(colour = "#FE6F88", size = 12, face = "bold"),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
shp_training <- filter(shp_training, value > 0)
#create a bar plot
ggplot(shp_training, aes(unit, value, fill = variable))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value), fontface = "bold", position = position_dodge(width = 1), vjust = 0.5)+
theme(
axis.text.x = element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.x = element_text(colour = "#FE6F88", size = 12, face = "bold"),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
View(cleaned_data)
training_data <- cleaned_data[,c('training', 'unit', 'department')]
cleaned_data = rename(cleaned_data,training_done = X8..If.yes..please.specify)
cleaned_data$training_done <- tolower(cleaned_data$training_done)
table_training <- group_by(cleaned_data, training_done)
table_trainingby <- group_by(cleaned_data, training_done)
table_training <- summarise(table_trainingby, count = n())
View(table_training)
View(table_training)
cleaned_data = rename(cleaned_data,kwld_rsch = X9.What.is.your.overall.assessment.in.relation.to.your.knowledge.and.skills.in.Research..Monitoring.Evaluation.and.Learning.in.relation.to.what.you.do.)
cleaned_data = rename(cleaned_data,need_training = X10..Do.you.require.any.training.in.Research.Monitoring.Evaluation.and.Learning...)
knowledge_by <- group_by(cleaned_data, kwld_rsch)
table_kwld <- summarise(knowledge_by, count = n())
View(table_kwld)
View(table_kwld)
table_kwld <- summarise(knowledge_by, count = n()) %>% mutate(Percantage = count/sum(count))
table_kwld <- summarise(knowledge_by, count = n()) %>% mutate(Percantagew = round(count/sum(count),1))
table_kwld <- summarise(knowledge_by, count = n()) %>% mutate(Percantagew = round((count/sum(count)*100),1))
table_kwld <- summarise(knowledge_by, count = n()) %>% mutate(Percantage = paste(round((count/sum(count)*100),1),"%", sep = ""))
#Analysis of people in need of trainig
nd_trby <- group_by(cleaned_data, need_training)
table_ndtr <- summarise(nd_trby, count = n()) %>% mutate(Percantage = paste(round((count/sum(count)*100),1),"%", sep = ""))
View(table_ndtr)
View(table_ndtr)
nd_trby <- group_by(cleaned_data, need_training)
table_ndtr <- summarise(nd_trby, count = n()) %>% mutate(Percantage = paste(round((count/sum(count)*100),0),"%", sep = ""))
400/60
View(table_kwld)
View(table_kwld)
View(table_training)
View(table_training)
sd(256)
table_training <- rename(table_training, table_training[, c(1:2)]as.name(c('1','2')))
table_training <- rename(table_training, table_training[, c(1:2)],as.name(c('1','2')))
table_training <- rename(table_training, table_training[, c(1:2)],c('1','2'))
View(nd_trby)
