axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
#####
#Analysis of unique positions reported back in the survey.
cleaned_data$position <- tolower(cleaned_data$position)
#Returns string w/o trailing whitespace
trim.trailing <- function (x) sub("\\s+$", "", x)
cleaned_data$position <-trim.trailing(cleaned_data$position)
#Capitilize the first word only
firstup <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
cleaned_data$position <-firstup(cleaned_data$position)
by_position = group_by(cleaned_data, position)
unique_position = summarise(by_position, count = n())
View(unique_position)
###
#How long have you been in your current position
#Develop a box plot
time_current <- cleaned_data$time_current
time_industry <- cleaned_data$time_industry
bxplt_data_1 <- data.frame(group = "current", value =  time_current)
bxplt_data_2 <- data.frame(group = "industry", value =  time_industry)
bxplt_data <- rbind(bxplt_data_1,bxplt_data_2)
#develop a box plot for distribution of experience
ggplot(data = bxplt_data, aes(group, value, fill = group))+
geom_boxplot(outlier.colour="red", outlier.shape=8,outlier.size=4)
#Analysis of unique qualifications  reported back in the survey.
cleaned_data$level_education <- tolower(cleaned_data$level_education)
cleaned_data$level_education <-trim.trailing(cleaned_data$level_education)
cleaned_data$level_education <-firstup(cleaned_data$level_education)
by_edlevel = group_by(cleaned_data, level_education)
unique_edlevel = summarise(by_edlevel, count = n())
View(unique_edlevel)
#Training Required Per Unit.
#Analysis on training required per unit
training_data <- cleaned_data[,c('training', 'unit', 'department')]
grouped_training = group_by(training_data, unit)
#unit per training
unit_training <- summarise(grouped_training, Yes = sum(training == 'Yes'), No = sum(training == 'No'))
unit_renamed <- c("C&P","DL","FMT","IS", "PDA","PDM")
unit_training$unit <- unit_renamed
#reshaped training
shp_training <- melt(unit_training)
shp_training <- filter(shp_training, value > 0)
#plotting unit against
#create a bar plot
ggplot(shp_training, aes(unit, value, fill = variable))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value), fontface = "bold", position = position_dodge(width = 1), vjust = 0.5)+
theme(
axis.text.x = element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.x = element_text(colour = "#FE6F88", size = 12, face = "bold"),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
## Training
#Tabling training done per departement
#Remember to choose training per unit.
cleaned_data$training_done <- tolower(cleaned_data$training_done)
cleaned_data$training_done <- firstup(cleaned_data$training_done)
table_trainingby <- group_by(cleaned_data, training_done)
table_training <- table_trainingby %>% summarise(count = n()) %>% filter(training_done != "")
View(table_training)
##This question
#Analysis knowledge in research research.
#Remember to choose training per unit. choose per training
knowledge_by <- group_by(cleaned_data, kwld_rsch)
table_kwld <- summarise(knowledge_by, count = n()) %>% mutate(Percantage = paste(round((count/sum(count)*100),0),"%", sep = ""))
View(table_kwld)
#Analysis of people in need of trainig
nd_trby <- group_by(cleaned_data, need_training)
table_ndtr <- summarise(nd_trby, count = n()) %>% mutate(Percantage = paste(round((count/sum(count)*100),0),"%", sep = ""))
View(table_ndtr)
unique_unit = summarise(by_unit,
R_var1 = mean(R_var1),
R_var2 = mean(R_var2),
R_var3 = mean(R_var3),
R_var4 = mean(R_var4),
R_var5 = mean(R_var5),
R_var6 = mean(R_var6),
R_var7 = mean(R_var7),
R_var8 = mean(R_var8),
R_var9 = mean(R_var9),
R_var10 = mean(R_var10),
R_var11 = mean(R_var11),
R_var12 = mean(R_var12),
R_var13 = mean(R_var13),
R_var14 = mean(R_var14),
R_var15 = mean(R_var15),
count = n())
View(unique_unit)
View(unique_unit)
source('~/work/test.R')
by_unit = group_by(cleaned_data, unit)
unique_unit = summarise(by_unit,
R_var1 = mean(R_var1),
R_var2 = mean(R_var2),
R_var3 = mean(R_var3),
R_var4 = mean(R_var4),
R_var5 = mean(R_var5),
R_var6 = mean(R_var6),
R_var7 = mean(R_var7),
R_var8 = mean(R_var8),
R_var9 = mean(R_var9),
R_var10 = mean(R_var10),
R_var11 = mean(R_var11),
R_var12 = mean(R_var12),
R_var13 = mean(R_var13),
R_var14 = mean(R_var14),
R_var15 = mean(R_var15),
count = n())
View(unique_unit)
View(unique_unit)
source('~/work/test.R')
mean(by_unit$R_var13)
mean(by_unit$R_var13, na.rm = TRUE)
source('~/work/test.R')
source('~/work/test.R')
source('~/work/test.R')
source('~/work/test.R')
source('~/work/test.R')
source('~/work/test.R')
source('~/work/test.R')
source('~/work/test.R')
#count Unique unit
by_unit = group_by(cleaned_data, unit)
unique_unit = summarise(by_unit,
R_var1 = round(mean(R_var1, na.rm = TRUE), 0),
R_var2 = round(mean(R_var2, na.rm = TRUE), 0),
R_var3 = round(mean(R_var3, na.rm = TRUE), 0),
R_var4 = round(mean(R_var4, na.rm = TRUE), 0),
R_var5 = round(mean(R_var5, na.rm = TRUE), 0),
R_var6 = round(mean(R_var6, na.rm = TRUE), 0),
R_var7 = round(mean(R_var7, na.rm = TRUE), 0),
R_var8 = round(mean(R_var8, na.rm = TRUE), 0),
R_var9 = round(mean(R_var9, na.rm = TRUE), 0),
R_var10 = round(mean(R_var10, na.rm = TRUE), 0),
R_var11 = round(mean(R_var11, na.rm = TRUE), 0),
R_var12 = round(mean(R_var12, na.rm = TRUE), 0),
R_var13 = round(mean(R_var13, na.rm = TRUE), 0),
R_var14 = round(mean(R_var14, na.rm = TRUE), 0),
R_var15 = round(mean(R_var15, na.rm = TRUE), 0),
count = n())
View(unique_unit)
View(unique_unit)
source('~/work/test.R')
unique_unit = summarise(by_unit,count = n())
View(unique_unit)
View(unique_unit)
View(unique_unit)
View(unique_unit)
head(unique_unit)
View(unique_unit)
View(unique_unit)
#load libraries
library(ggplot2)
library(dplyr)
library(reshape2)
#Read data into R
cleaned_data <- read.csv("~/work/cleaned_capacity.csv", header = TRUE, strip.white=TRUE)
####
#Unique departments
#count Unique departments
by_department = group_by(cleaned_data, department)
unique_dpt = summarise(by_department, count = n())
#create a bar plot
ggplot(unique_dpt, aes(department, count, fill = department))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
####
#count Unique unit
by_unit = group_by(cleaned_data, unit)
unique_unit = summarise(by_unit, count = n())
#create a bar plot
ggplot(unique_unit, aes(unit, count, fill = unit))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
#####
#Analysis of unique positions reported back in the survey.
cleaned_data$position <- tolower(cleaned_data$position)
#Returns string w/o trailing whitespace
trim.trailing <- function (x) sub("\\s+$", "", x)
cleaned_data$position <-trim.trailing(cleaned_data$position)
#Capitilize the first word only
firstup <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
cleaned_data$position <-firstup(cleaned_data$position)
by_position = group_by(cleaned_data, position)
unique_position = summarise(by_position, count = n())
View(unique_position)
###
#How long have you been in your current position
#Develop a box plot
time_current <- cleaned_data$time_current
time_industry <- cleaned_data$time_industry
bxplt_data_1 <- data.frame(group = "current", value =  time_current)
bxplt_data_2 <- data.frame(group = "industry", value =  time_industry)
bxplt_data <- rbind(bxplt_data_1,bxplt_data_2)
#develop a box plot for distribution of experience
ggplot(data = bxplt_data, aes(group, value, fill = group))+
geom_boxplot(outlier.colour="red", outlier.shape=8,outlier.size=4)
#Analysis of unique qualifications  reported back in the survey.
cleaned_data$level_education <- tolower(cleaned_data$level_education)
cleaned_data$level_education <-trim.trailing(cleaned_data$level_education)
cleaned_data$level_education <-firstup(cleaned_data$level_education)
by_edlevel = group_by(cleaned_data, level_education)
unique_edlevel = summarise(by_edlevel, count = n())
View(unique_edlevel)
#Training Required Per Unit.
#Analysis on training required per unit
training_data <- cleaned_data[,c('training', 'unit', 'department')]
grouped_training = group_by(training_data, unit)
#unit per training
unit_training <- summarise(grouped_training, Yes = sum(training == 'Yes'), No = sum(training == 'No'))
unit_renamed <- c("C&P","DL","FMT","IS", "PDA","PDM")
unit_training$unit <- unit_renamed
#reshaped training
shp_training <- melt(unit_training)
shp_training <- filter(shp_training, value > 0)
#plotting unit against
#create a bar plot
ggplot(shp_training, aes(unit, value, fill = variable))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value), fontface = "bold", position = position_dodge(width = 1), vjust = 0.5)+
theme(
axis.text.x = element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.x = element_text(colour = "#FE6F88", size = 12, face = "bold"),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
## Training
#Tabling training done per departement
#Remember to choose training per unit.
cleaned_data$training_done <- tolower(cleaned_data$training_done)
cleaned_data$training_done <- firstup(cleaned_data$training_done)
table_trainingby <- group_by(cleaned_data, training_done)
table_training <- table_trainingby %>% summarise(count = n()) %>% filter(training_done != "")
View(table_training)
##This question
#Analysis knowledge in research research.
#Remember to choose training per unit. choose per training
knowledge_by <- group_by(cleaned_data, kwld_rsch)
table_kwld <- summarise(knowledge_by, count = n()) %>% mutate(Percantage = paste(round((count/sum(count)*100),0),"%", sep = ""))
View(table_kwld)
#Analysis of people in need of trainig
nd_trby <- group_by(cleaned_data, need_training)
table_ndtr <- summarise(nd_trby, count = n()) %>% mutate(Percantage = paste(round((count/sum(count)*100),0),"%", sep = ""))
View(table_ndtr)
View(unique_unit)
View(unique_unit)
unique_unit = summarise(by_unit,
R_var1 = round(mean(R_var1, na.rm = TRUE), 0),
R_var2 = round(mean(R_var2, na.rm = TRUE), 0),
R_var3 = round(mean(R_var3, na.rm = TRUE), 0),
R_var4 = round(mean(R_var4, na.rm = TRUE), 0),
R_var5 = round(mean(R_var5, na.rm = TRUE), 0),
R_var6 = round(mean(R_var6, na.rm = TRUE), 0),
R_var7 = round(mean(R_var7, na.rm = TRUE), 0),
R_var8 = round(mean(R_var8, na.rm = TRUE), 0),
R_var9 = round(mean(R_var9, na.rm = TRUE), 0),
R_var10 = round(mean(R_var10, na.rm = TRUE), 0),
R_var11 = round(mean(R_var11, na.rm = TRUE), 0),
R_var12 = round(mean(R_var12, na.rm = TRUE), 0),
R_var13 = round(mean(R_var13, na.rm = TRUE), 0),
R_var14 = round(mean(R_var14, na.rm = TRUE), 0),
R_var15 = round(mean(R_var15, na.rm = TRUE), 0),
count = n())
mat <- tis(matrix(1:36, ncol = 3), start = latestJanuary())
x <- unique_unit
x_avarage <- rowMeans(x)
x_avarage <- rowMeans(1)
x[1,]
x[1,1:]
x_avarage <- rowMeans(x[1,-1])
x_avarage
x[1,-1
]
x <- as.vector(x[1,-1])
x
data <- data.frame(id=c(101,102,103), a=c(1,2,3), b=c(2,2,2), c=c(3,3,3))
data
data %>%
rowwise() %>%
mutate(c=mean(c(a,b)))
source('~/work/test.R')
length(x)
length(unique_unit)
source('~/work/test.R')
avarage = summarise(by_unit,
R_var1 = round(mean(R_var1, na.rm = TRUE), 0),
R_var2 = round(mean(R_var2, na.rm = TRUE), 0),
R_var3 = round(mean(R_var3, na.rm = TRUE), 0),
R_var4 = round(mean(R_var4, na.rm = TRUE), 0),
R_var5 = round(mean(R_var5, na.rm = TRUE), 0),
R_var6 = round(mean(R_var6, na.rm = TRUE), 0),
R_var7 = round(mean(R_var7, na.rm = TRUE), 0),
R_var8 = round(mean(R_var8, na.rm = TRUE), 0),
R_var9 = round(mean(R_var9, na.rm = TRUE), 0),
R_var10 = round(mean(R_var10, na.rm = TRUE), 0),
R_var11 = round(mean(R_var11, na.rm = TRUE), 0),
R_var12 = round(mean(R_var12, na.rm = TRUE), 0),
R_var13 = round(mean(R_var13, na.rm = TRUE), 0),
R_var14 = round(mean(R_var14, na.rm = TRUE), 0),
R_var15 = round(mean(R_var15, na.rm = TRUE), 0),
count = n())
avarage = avarage %>% rowwise() %>% mutate(Avarage = mean(1:length(avarage)))
View(avarage)
View(avarage)
source('~/work/test.R')
research_names = c('R_var1','R_var2','R_var3','R_var4','R_var5','R_var6','R_var7','R_var8','R_var9','R_var10','R_var11','R_var12','R_var13','R_var14','R_var15','R_var16')
avarage = avarage %>% rowwise() %>% mutate(Avarage = mean(research_names))
avarage = avarage %>% rowwise() %>% mutate(Avarage = mean(research_names))
avarage = avarage %>% rowwise() %>% mutate(Avarage = mean(as.name(research_names)))
avarage = avarage %>% rowwise() %>% mutate(Avarage = mean(c(R_var1,R_var2)))
as.name(research_names)
research_names = c('R_var1','R_var2','R_var3','R_var4','R_var5','R_var6','R_var7','R_var8','R_var9','R_var10','R_var11','R_var12','R_var13','R_var14','R_var15','R_var16')
as.name(research_names)
unlist(research_names)
as.name(unlist(research_names))
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
rowSums(x)
x
colSums(x)
colSums(avarage)
colSums(avarage[-1,-1])
colMeans(avarage[-1,-1])
?? rbind
All_mean < - colMeans(avarage[-1,-1])
All_mean < - colMeans(avarage[-1,-1])
colMeans(avarage[-1,-1])
x = colMeans(avarage[-1,-1])
All_mean= colMeans(avarage[-1,-1])
All_mean <- colMeans(avarage[-1,-1])
avarage <- rbind(All_mean)
avarage <- rbind(avarage,All_mean)
avarage = summarise(by_unit,
R_var1 = round(mean(R_var1, na.rm = TRUE), 0),
R_var2 = round(mean(R_var2, na.rm = TRUE), 0),
R_var3 = round(mean(R_var3, na.rm = TRUE), 0),
R_var4 = round(mean(R_var4, na.rm = TRUE), 0),
R_var5 = round(mean(R_var5, na.rm = TRUE), 0),
R_var6 = round(mean(R_var6, na.rm = TRUE), 0),
R_var7 = round(mean(R_var7, na.rm = TRUE), 0),
R_var8 = round(mean(R_var8, na.rm = TRUE), 0),
R_var9 = round(mean(R_var9, na.rm = TRUE), 0),
R_var10 = round(mean(R_var10, na.rm = TRUE), 0),
R_var11 = round(mean(R_var11, na.rm = TRUE), 0),
R_var12 = round(mean(R_var12, na.rm = TRUE), 0),
R_var13 = round(mean(R_var13, na.rm = TRUE), 0),
R_var14 = round(mean(R_var14, na.rm = TRUE), 0),
R_var15 = round(mean(R_var15, na.rm = TRUE), 0),
count = n())
avarage <- rbind(avarage,All_mean)
avarage <- rbind(avarage,All_mean)
All_mean
typeof(All_mean)
is.factor(All_mean)
is.vector(All_mean)
all_mean <- c("Avarage", All_mean)
all_
all_mean
avarage <- rbind(avarage,all_mean)
rgb(red = 254, green = 111, blue = 136, maxColorValue = 255)
#load libraries
library(ggplot2)
library(dplyr)
library(reshape2)
#Read data into R
cleaned_data <- read.csv("~/work/cleaned_capacity.csv", header = TRUE, strip.white=TRUE)
####
#Unique departments
#count Unique departments
by_department = group_by(cleaned_data, department)
unique_dpt = summarise(by_department, count = n())
#create a bar plot
ggplot(unique_dpt, aes(department, count, fill = department))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
####
#count Unique unit
by_unit = group_by(cleaned_data, unit)
unique_unit = summarise(by_unit, count = n())
#create a bar plot
ggplot(unique_unit, aes(unit, count, fill = unit))+
geom_bar(stat = "identity")+
geom_text(aes(label = count), fontface = "bold")+
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
#####
#Analysis of unique positions reported back in the survey.
cleaned_data$position <- tolower(cleaned_data$position)
#Returns string w/o trailing whitespace
trim.trailing <- function (x) sub("\\s+$", "", x)
cleaned_data$position <-trim.trailing(cleaned_data$position)
#Capitilize the first word only
firstup <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
cleaned_data$position <-firstup(cleaned_data$position)
by_position = group_by(cleaned_data, position)
unique_position = summarise(by_position, count = n())
View(unique_position)
###
#How long have you been in your current position
#Develop a box plot
time_current <- cleaned_data$time_current
time_industry <- cleaned_data$time_industry
bxplt_data_1 <- data.frame(group = "current", value =  time_current)
bxplt_data_2 <- data.frame(group = "industry", value =  time_industry)
bxplt_data <- rbind(bxplt_data_1,bxplt_data_2)
#develop a box plot for distribution of experience
ggplot(data = bxplt_data, aes(group, value, fill = group))+
geom_boxplot(outlier.colour="red", outlier.shape=8,outlier.size=4)
#Analysis of unique qualifications  reported back in the survey.
cleaned_data$level_education <- tolower(cleaned_data$level_education)
cleaned_data$level_education <-trim.trailing(cleaned_data$level_education)
cleaned_data$level_education <-firstup(cleaned_data$level_education)
by_edlevel = group_by(cleaned_data, level_education)
unique_edlevel = summarise(by_edlevel, count = n())
View(unique_edlevel)
#Training Required Per Unit.
#Analysis on training required per unit
training_data <- cleaned_data[,c('training', 'unit', 'department')]
grouped_training = group_by(training_data, unit)
#unit per training
unit_training <- summarise(grouped_training, Yes = sum(training == 'Yes'), No = sum(training == 'No'))
unit_renamed <- c("C&P","DL","FMT","IS", "PDA","PDM")
unit_training$unit <- unit_renamed
#reshaped training
shp_training <- melt(unit_training)
shp_training <- filter(shp_training, value > 0)
#plotting unit against
#create a bar plot
ggplot(shp_training, aes(unit, value, fill = variable))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value), fontface = "bold", position = position_dodge(width = 1), vjust = 0.5)+
theme(
axis.text.x = element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.x = element_text(colour = "#FE6F88", size = 12, face = "bold"),
axis.text.y=element_text(colour = "#7F7F7F", size = 12, face = "bold"),
axis.title.y = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.title = element_text(colour = "#FE6F88", size = 12, face = "bold"),
legend.text = element_text(colour = "#7F7F7F", size = 9, face = "bold")
)
## Training
#Tabling training done per departement
#Remember to choose training per unit.
cleaned_data$training_done <- tolower(cleaned_data$training_done)
cleaned_data$training_done <- firstup(cleaned_data$training_done)
table_trainingby <- group_by(cleaned_data, training_done)
table_training <- table_trainingby %>% summarise(count = n()) %>% filter(training_done != "")
View(table_training)
##This question
#Analysis knowledge in research research.
#Remember to choose training per unit. choose per training
knowledge_by <- group_by(cleaned_data, kwld_rsch)
table_kwld <- summarise(knowledge_by, count = n()) %>% mutate(Percantage = paste(round((count/sum(count)*100),0),"%", sep = ""))
View(table_kwld)
#Analysis of people in need of trainig
nd_trby <- group_by(cleaned_data, need_training)
table_ndtr <- summarise(nd_trby, count = n()) %>% mutate(Percantage = paste(round((count/sum(count)*100),0),"%", sep = ""))
View(table_ndtr)
View(cleaned_data)
View(cleaned_data)
